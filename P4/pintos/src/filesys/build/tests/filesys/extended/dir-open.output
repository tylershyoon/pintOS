Copying tests/filesys/extended/dir-open into /tmp/gtVGFHsLLj.dsk...
Copying tests/filesys/extended/tar into /tmp/gtVGFHsLLj.dsk...
Writing command line to /tmp/LzD4iApvQk.dsk...
squish-pty bochs -q
Kernel command line: -q -f put dir-open put tar run dir-open
Pintos booting with 4,096 kB RAM...
373 pages available in kernel pool.
372 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hd0:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00011"
hd0:1: detected 4,032 sector (1 MB) disk, model "Generic 1234", serial "BXHD00012"
hd1:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00021"
hd1:1: detected 8,064 sector (3 MB) disk, model "Generic 1234", serial "BXHD00022"
Formatting file system...done.
Boot complete.
Putting 'dir-open' into the file system...
Putting 'tar' into the file system...
Executing 'dir-open':
(dir-open) begin
(dir-open) mkdir "xyzzy"
(dir-open) open "xyzzy"
(dir-open) write "xyzzy"
Kernel PANIC at ../../threads/synch.c:198 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0xc01072cc 0xc0102b8d 0xc010b1c1 0xc010b575 0xc010188d 0xc01019bf 0x804a30a 0x8048294 0x80482e3 0x8048130 0x80488e4 0x8048918.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../devices/timer.c:187 in real_time_sleep().
Kernel command line: -q -f put dir-open put tar run dir-open
Pintos booting with 4,096 kB RAM...
373 pages available in kernel pool.
372 pages available in user pool.
Calibrating timer...  204,600 loops/s.
hd0:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00011"
hd0:1: detected 4,032 sector (1 MB) disk, model "Generic 1234", serial "BXHD00012"
hd1:0: detected 1,008 sector (504 kB) disk, model "Generic 1234", serial "BXHD00021"
hd1:1: detected 8,064 sector (3 MB) disk, model "Generic 1234", serial "BXHD00022"
Formatting file system...done.
Boot complete.
Putting 'dir-open' into the file system...
Putting 'tar' into the file system...
Executing 'dir-open':
dir-open: exit(-1)
Execution of 'dir-open' complete.
Timer: 1907 ticks
Thread: 0 idle ticks, 1807 kernel ticks, 107 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 40 reads, 448 writes
hd1:0: 213 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 923 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off...
